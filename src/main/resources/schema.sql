CREATE TABLE PERSONS(
id INTEGER PRIMARY KEY,
email varchar(255),
login varchar(255),
name  varchar(255),
birthday timestamp
);



CREATE TABLE FILMS(
id INTEGER PRIMARY KEY,
name varchar(255),
description varchar(200),
release_date timestamp,
duration real
);




CREATE TABLE LIKES(
film_id INTEGER REFERENCES FILMS(id),
like_person_id INTEGER REFERENCES PERSONS(id)
);

CREATE TABLE if not exists USERS(
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
email varchar(255),
login varchar(255),
name  varchar(255),
birthday timestamp
);


CREATE TABLE if not exists MPA(
mpa_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
age_limit VARCHAR(255)
);

CREATE TABLE if not exists FILMS(
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name varchar(255),
mpa_id integer references mpa(mpa_id),
description varchar(200),
release_date timestamp,
duration real
);

CREATE TABLE if not exists LIKES(
film_id INTEGER REFERENCES FILMS(id),
like_USER_id INTEGER UNIQUE REFERENCES USERS(id)
);

CREATE TABLE if not exists GENRE(
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name VARCHAR(255)
);

CREATE TABLE  if not exists GENRE_FILM(
film_id INTEGER REFERENCES FILMS(id),
genre INTEGER REFERENCES GENRE(id)
);

CREATE TABLE if not exists FRIEND_REQUEST(
USER_ID INTEGER REFERENCES USERS(ID),
mutual_friends BOOLEAN,
FRIEND_ID INTEGER
);